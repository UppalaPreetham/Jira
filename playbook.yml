# Jira version.
jira_version: "8.7.0"

# Jira download details.
jira_download: "{{ _jira_download[jira_version] }}"

# MySQL JDBC version.
mysql_jdbc_version: "5.1.48"

# MySQL JDBC download details.
mysql_jdbc_download: "{{ _mysql_jdbc_download[mysql_jdbc_version] }}"

# PostgreSQL JDBC version.
postgresql_jdbc_version: "42.2.9"

# PostgreSQL JDBC download details.
postgresql_jdbc_download: "{{ _postgresql_jdbc_download[postgresql_jdbc_version] }}"

# Owner and group for Jira.
jira_owner: "jira"
jira_group: "jira"

# Jira home directory.
jira_home: "/var/atlassian/application-data/jira"

# Jira installation directory.
jira_catalina: "/opt/atlassian/jira"

# JVM minimal and maximum memory usage.
jira_jvm_minimum_memory: "1024m"
jira_jvm_maximum_memory: "1024m"

# Proxy and context path setup.
jira_catalina_connector_proxyname: ~
jira_catalina_connector_proxyport: ~
jira_catalina_connector_scheme: "http"
jira_catalina_connector_secure: "false"
jira_catalina_context_path: "/"

# Atlassian Support recommended JVM arguments.
jira_jvm_support_recommended_args: >-
  -Datlassian.plugins.enable.wait=300
  -XX:+UnlockExperimentalVMOptions
  -XX:+UseCGroupMemoryLimitForHeap
  -XX:MaxRAMFraction=1
# Session timeout.
jira_session_timeout: "300"

- hosts: all
  remote_user: root
  become: true
  roles:
    - role: bootstrap
    - role: locales
    - role: timezone
    - role: python

- hosts: all
  remote_user: root
  become: true
  roles:
    - role: openjdk
      openjdk_release: "8"
    - role: jira

  post_tasks:
    - name: start service
      service:
        name: "jira"
        state: "started"
      changed_when: false
      ignore_errors: true

    - name: check port
      wait_for:
        port: "8080"
        timeout: "300"
        delay: "10"
      async: "300"
      poll: "10"
      register: result
      until: result is succeeded
      retries: 30

    - name: check page
      uri:
        url: "http://localhost:8080"
        status_code: "200"
        timeout: "300"
        return_content: true
      async: "300"
      poll: "10"
      register: result
      until: result.status == 200
      retries: 30

    - name: check result
      fail:
      when: "'jira' not in result.content"
